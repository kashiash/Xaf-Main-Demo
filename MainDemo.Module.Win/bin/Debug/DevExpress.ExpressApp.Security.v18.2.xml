<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.ExpressApp.Security.v18.2</name>
    </assembly>
    <members>
        <member name="T:DevExpress.ExpressApp.Security.HasRightsToModifyMemberController">

            <summary>
                <para>A <see cref="T:DevExpress.ExpressApp.ViewController"/> descendant that makes Property Editors read-only or editable, dependent on the current user&#39;s permissions.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.HasRightsToModifyMemberController.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.HasRightsToModifyMemberController"/> class.</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.HasRightsToModifyMemberController.AllowEditKey">
            <summary>
                <para>The name of the key that is added to the Property Editor&#39;s <see cref="P:DevExpress.ExpressApp.Editors.PropertyEditor.AllowEdit"/> <see cref="T:DevExpress.ExpressApp.Utils.BoolList"/> to indicate whether or not an editor is enabled due to security restrictions.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.HasRightsToModifyMemberController.UpdatePropertyEditors">
            <summary>
                <para>Makes the Property Editors&#39; states read-only or editable, dependent on the current user&#39;s permissions.</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.MyDetailsController">

            <summary>
                <para>A <see cref="T:DevExpress.ExpressApp.WindowController"/> descendant that adds the <b>My Details</b> item to the Navigation System, and contains the <b>MyDetails</b> Action.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.MyDetailsController.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.MyDetailsController"/> class.</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.MyDetailsController.CanGenerateMyDetailsNavigationItem">
            <summary>
                <para>Specifies whether to add the <b>MyDetails</b> item to the Navigation System. The default value is <b>true</b>, i.e. the <b>MyDetails</b> item is added.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsAction">
            <summary>
                <para>Gets a <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> used to invoke the <b>My Details</b> Detail View.</para>
            </summary>
            <value>A <b>SimpleAction</b> object used to invoke the <b>My Details</b> Detail View.</value>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsActionActiveKeySecurity">
            <summary>
                <para>This field is for internal use only.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsActionActiveKeyShortcutIsAssigned">
            <summary>
                <para>A string representing a key of the <see cref="P:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsAction"/>&#39;s <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Active"/> collection. This key indicates that the Action shortcut is assigned.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsActionActiveKeyUserTypeAvailable">
            <summary>
                <para>This field is for internal use only.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsActionId">
            <summary>
                <para>Gets a string representing the identifier of the <see cref="P:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsAction"/>.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsActionImageName">
            <summary>
                <para>Gets a string representing the image name used as <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ImageName"/> of the <see cref="P:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsAction"/> Action, and used as <see cref="P:DevExpress.ExpressApp.Model.IModelBaseChoiceActionItem.ImageName"/> of the <b>MyDetails</b> navigation item.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsNavigationItemId">
            <summary>
                <para>Gets a string representing the identifier of the <b>My Details</b> navigation item (see <see cref="P:DevExpress.ExpressApp.Model.IModelBaseChoiceActionItem.Id"/>).</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsObjectKey">
            <summary>
                <para>Gets a string representing an object key used when generating the <b>My Details</b> navigation item.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.MyDetailsController.MyDetailsViewShortcut">
            <summary>
                <para>Specifies a View shortcut used when generating the <b>My Details</b> navigation item.</para>
            </summary>
            <value>A string representing a View shortcut used when generating the <b>My Details</b> navigation item.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor">

            <summary>
                <para>Processes permission requests when the <b>Deny</b> Permission Policy is in use.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.#ctor">
            <summary>
                <para>For internal use.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.#ctor(DevExpress.ExpressApp.Security.IPermissionDictionary)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="permissionsDictionary">
		 
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.#ctor(DevExpress.ExpressApp.Security.IOperationPermissionProvider)">
            <summary>
                <para> </para>
            </summary>
            <param name="permissionsProvider">
		 
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.#ctor(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para> </para>
            </summary>
            <param name="permissionsProvider">
		 
            </param>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.CanUseCache">
            <summary>
                <para>For internal use.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.CanUseCacheDefaultValue">
            <summary>
                <para>For internal use.</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.Delimiters">
            <summary>
                <para>For internal use.</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.FalseCriteria">
            <summary>
                <para>For internal use.</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.FalseCriteriaOperator">
            <summary>
                <para>For internal use.</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.GetMemberCriteria(System.Type,System.String)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="type">
		 
            </param>
            <param name="memberName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.GetObjectCriteria(System.Type)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="type">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.IsAdministrator">
            <summary>
                <para>For internal use.</para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.IsGranted(DevExpress.ExpressApp.Security.ServerPermissionRequest)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="permissionRequest">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.IsGranted(System.Type,System.String,System.Object,System.String,DevExpress.ExpressApp.Security.ISecurityExpressionEvaluator,DevExpress.ExpressApp.Security.IPermissionDictionary)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="type">
		 
            </param>
            <param name="operation">
		 
            </param>
            <param name="targetObject">
		 
            </param>
            <param name="member">
		 
            </param>
            <param name="securityExpressionEvaluator">
		 
            </param>
            <param name="permissions">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.SelectAllString">
            <summary>
                <para>For internal use.</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.ServerPermissionRequestProcessor.UseAutoAssociationPermission">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.RolesMergingMode">

            <summary>
                <para>Contains values specifying how the Security System determines if a user can perform a specific operation when this user has multiple roles with different permission sets.</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Security.RolesMergingMode.GrantedInAllRoles">
            <summary>
                <para>An allowed operation should be allowed in all roles.</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.RolesMergingMode.GrantedInAnyRole">
            <summary>
                <para>An allowed operation can be allowed in any role.</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.PermissionRequestProcessorBase`1">

            <summary>
                <para>An abstract base class for Permission Request Processors.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionRequestProcessorBase`1.IsGranted(DevExpress.ExpressApp.Security.ProcessorPermissionRequestType)">
            <summary>
                <para>Determines whether or not a specified permission is granted.
</para>
            </summary>
            <param name="permissionRequest">
		An <see cref="T:DevExpress.ExpressApp.Security.IPermissionRequest"/> object that is a Permission Request.

            </param>
            <returns><b>true</b>, when a permission is granted; otherwise - <b>false</b>;
</returns>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter">

            <summary>
                <para>The static class used to maintain the list of registered Security Adapters and process the security permission requests using these adapters.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.ClearPermissionCache">
            <summary>
                <para>For internal use.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.DisableRefreshPermissions">
            <summary>
                <para>For internal use.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.Enable(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Enables the specified list of Security Adapters in the <see cref="F:DevExpress.ExpressApp.Security.Adapters.ReloadPermissionStrategy.NoCache"/> mode.</para>
            </summary>
            <param name="securityAdapterProviders">
		An <b>IEnumerable&lt;ISecurityAdapterProvider&gt;</b> list of Security Adapter Providers.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.Enable(DevExpress.ExpressApp.Security.Adapters.ISecurityAdapterProvider,DevExpress.ExpressApp.Security.Adapters.ReloadPermissionStrategy)">
            <summary>
                <para>Enables the specified Security Adapter using the selected mode of reloading the security permissions.</para>
            </summary>
            <param name="securityAdapterProviders">
		An <b>ISecurityAdapterProvider</b> object specifying the Security Adapter Provider.
            </param>
            <param name="reloadPermissionStrategy">
		An <see cref="T:DevExpress.ExpressApp.Security.Adapters.ReloadPermissionStrategy"/> enumeration value specifying the mode of reloading the security permissions.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.Enable(DevExpress.ExpressApp.Security.Adapters.ISecurityAdapterProvider)">
            <summary>
                <para>Enables the specified Security Adapter in the <see cref="F:DevExpress.ExpressApp.Security.Adapters.ReloadPermissionStrategy.NoCache"/> mode.</para>
            </summary>
            <param name="securityAdapterProvider">
		An <b>ISecurityAdapterProvider</b> object specifying the Security Adapter Provider.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.Enable(System.Collections.Generic.IEnumerable`1,DevExpress.ExpressApp.Security.Adapters.ReloadPermissionStrategy)">
            <summary>
                <para> </para>
            </summary>
            <param name="sourceSecurityAdapterProviders">
		 
            </param>
            <param name="reloadPermissionStrategy">
		 
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.GetAllAdapterProviders">
            <summary>
                <para>Specifies the password.</para>
            </summary>
            <returns>A string which is the password.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.GetOrCreateSecurityAdapter(DevExpress.ExpressApp.IObjectSpace,System.Type,System.Object)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="objectSpace">
		 
            </param>
            <param name="userType">
		 
            </param>
            <param name="userID">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.GetPermissionsProvider(DevExpress.ExpressApp.IObjectSpace,System.Type,System.Object)">
            <summary>
                <para> </para>
            </summary>
            <param name="objectSpace">
		 
            </param>
            <param name="providerType">
		 
            </param>
            <param name="providerId">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.GetRealObject(System.Object,DevExpress.ExpressApp.IObjectSpace)">
            <summary>
                <para> </para>
            </summary>
            <param name="targetObject">
		 
            </param>
            <param name="objectSpace">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.GetRealObjectSpace(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
                <para> </para>
            </summary>
            <param name="objectSpace">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.GetScopeKey(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
                <para> </para>
            </summary>
            <param name="objectSpace">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.IsDeletedObject(DevExpress.ExpressApp.IObjectSpace,System.Type,System.Object)">
            <summary>
                <para> </para>
            </summary>
            <param name="objectSpace">
		 
            </param>
            <param name="type">
		 
            </param>
            <param name="targetObject">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.IsGranted(DevExpress.ExpressApp.Security.IRequestSecurity,System.Type,System.Object,System.String,System.String,DevExpress.ExpressApp.IObjectSpace,System.Type,System.Object,System.Boolean@)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="requestSecurity">
		 
            </param>
            <param name="objectType">
		 
            </param>
            <param name="targetObject">
		 
            </param>
            <param name="memberName">
		 
            </param>
            <param name="operation">
		 
            </param>
            <param name="objectSpace">
		 
            </param>
            <param name="userType">
		 
            </param>
            <param name="userID">
		 
            </param>
            <param name="result">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.ReloadPermissionStrategy">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.Adapters.IsGrantedAdapter.SetObjectSpacePermissionProvider(System.Func`1)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="objectSpacePermissionProvider">
		 
            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.AssociationPermissionsMode">

            <summary>
                <para>Contains values specifying the modes of processing security permissions for associations.</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Security.AssociationPermissionsMode.Auto">
            <summary>
                <para>Association permissions are resolved automatically, except for the case when a criteria is involved (you should manually set permissions to both sides of the association in this instance).</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.AssociationPermissionsMode.ExtendedAuto">
            <summary>
                <para>Association permissions are always resolved automatically (may cause performance issues when permissions involve criteria).</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.AssociationPermissionsMode.Manual">
            <summary>
                <para>Association permissions are not resolved automatically (see How to: Manually Configure Permissions for Associated Collections and Reference Properties).</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.UserWithRolesExtensions">

            <summary>
                <para>Provides extension methods for <see cref="T:DevExpress.ExpressApp.Security.ISecurityUserWithRoles"/> implementation.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.UserWithRolesExtensions.IsUserInRole(DevExpress.Persistent.Base.Security.IUserWithRoles,System.String)">
            <summary>
                <para>Static extension method that determines whether the user belongs to a specific role.</para>
            </summary>
            <param name="user">
		An <b>IUserWithRoles</b> object that specifies the user.
            </param>
            <param name="roleName">
		A string that specifies the role name (see XPO <see cref="P:DevExpress.Persistent.BaseImpl.PermissionPolicy.PermissionPolicyRoleBase.Name"/> or EF <see cref="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.Name"/>).
            </param>
            <returns><b>true</b>, if the user belongs to the given role; otherwise - <b>false</b>.</returns>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.Adapters.ReloadPermissionStrategy">

            <summary>
                <para>Contains values specifying the modes of reloading the security permissions used by Security Adapters.</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Security.Adapters.ReloadPermissionStrategy.CacheOnFirstAccess">
            <summary>
                <para>Permissions are loaded and cached when the corresponding secured data is accessed for the first time. Cached permissions are used until the user is logged off. This mode significantly reduces the number of database requests when working with secured data.</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.Adapters.ReloadPermissionStrategy.NoCache">
            <summary>
                <para>Each Session (in XPO) or <a href="https://msdn.microsoft.com/en-us/data/jj729737.aspx">DBContext</a> (in Entity Framework) operates with the most recent permissions loaded from the database.</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.Adapters.ReloadPermissionStrategy.None">
            <summary>
                <para>For internal use.</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.PermissionSettingHelper">

            <summary>
                <para>Provides <a href="https://msdn.microsoft.com/en-us//library/bb383977.aspx">extension methods</a> for security roles that support the <b>Allow/Deny</b> Permission Policy, and for type permissions associated with these roles.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddMemberPermission(DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject,System.String,System.String,System.String,System.Nullable`1)">
            <summary>
                <para>Adds the member permission to the current type permission.</para>
            </summary>
            <param name="typePermission">
		An IPermissionPolicyTypePermissionObject object specifying the type permission.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="members">
		A string containing the semicolon-separated list of target member names.
            </param>
            <param name="criteria">
		A string containing the criteria expression that specifies the target object(s).
            </param>
            <param name="State">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyMemberPermissionsObject object specifying the added member permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddMemberPermission(DevExpress.Persistent.Base.IPermissionPolicyRole,System.Type,System.String,System.String,System.String,System.Nullable`1)">
            <summary>
                <para>Finds the first type permission for the given type in the current role and adds the member permission to it. If the appropriate type permission is not found, it is created.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="type">
		A <see cref="T:System.Type"/> object specifying the target type.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="members">
		A string containing the semicolon-separated list of target member names.
            </param>
            <param name="criteria">
		A string containing the criteria expression that specifies the target object(s).
            </param>
            <param name="State">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyMemberPermissionsObject object specifying the added member permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddMemberPermission``1(DevExpress.Persistent.Base.IPermissionPolicyRole,System.String,System.String,System.String,System.Nullable{DevExpress.Persistent.Base.SecurityPermissionState})">
            <summary>
                <para>Finds the first type permission for the given type in the current role and adds the member permission to it. If the appropriate type permission is not found, it is created.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="members">
		A string containing the semicolon-separated list of target member names.
            </param>
            <param name="criteria">
		A string containing the criteria expression that specifies the target object(s).
            </param>
            <param name="State">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyMemberPermissionsObject object specifying the added member permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddNavigationPermission(DevExpress.Persistent.Base.IPermissionPolicyRole,System.String,System.Nullable`1)">
            <summary>
                <para>Adds the navigation permission to the current role with the specified settings.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="itemPath">
		A <b>String</b> value which is the path to the particular navigation item or group.
            </param>
            <param name="state">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyNavigationPermissionObject object specifying the added navigation permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddObjectPermission(DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject,System.String,System.String,System.Nullable`1)">
            <summary>
                <para>Finds the first type permission for the given type in the current role and adds the object permission to it. If the appropriate type permission is not found, it is created.</para>
            </summary>
            <param name="typePermission">
		An IPermissionPolicyTypePermissionObject object specifying the type permission.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="criteria">
		A string containing the criteria expression that specifies the target object(s).
            </param>
            <param name="State">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyObjectPermissionsObject object specifying the added object permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddObjectPermission(DevExpress.Persistent.Base.IPermissionPolicyRole,System.Type,System.String,System.String,System.Nullable`1)">
            <summary>
                <para> </para>
            </summary>
            <param name="role">
		 
            </param>
            <param name="type">
		 
            </param>
            <param name="operations">
		 
            </param>
            <param name="criteria">
		 
            </param>
            <param name="state">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddObjectPermission``1(DevExpress.Persistent.Base.IPermissionPolicyRole,System.String,System.String,System.Nullable{DevExpress.Persistent.Base.SecurityPermissionState})">
            <summary>
                <para> </para>
            </summary>
            <param name="role">
		 
            </param>
            <param name="operations">
		 
            </param>
            <param name="criteria">
		 
            </param>
            <param name="state">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddTypePermission(DevExpress.Persistent.Base.IPermissionPolicyRole,System.Type,System.String,System.Nullable`1)">
            <summary>
                <para>Adds the type permission to the current role with the specified settings. If the permission for the given type exists already, then the settings if this existing type permission are altered.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="targetType">
		A <see cref="T:System.Type"/> object specifying the target type.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="state">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject object specifying the added type permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddTypePermission``1(DevExpress.Persistent.Base.IPermissionPolicyRole,System.String,System.Nullable{DevExpress.Persistent.Base.SecurityPermissionState})">
            <summary>
                <para>Adds the type permission to the current role with the specified settings. If the permission for the given type exists already, then the settings if this existing type permission are altered.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="state">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject object specifying the added type permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddTypePermissionsRecursively(DevExpress.Persistent.Base.IPermissionPolicyRole,System.Type,System.String,System.Nullable`1)">
            <summary>
                <para>Recursively adds type permissions to the current role for each type  which <a href="https://msdn.microsoft.com/en-us/library/system.type.isassignablefrom.aspx">is assignable from</a> the given type (or is equal to it). If the permission for the type already exists, then the settings of this existing type permission are altered.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="targetType">
		A <see cref="T:System.Type"/> object specifying the target type.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="state">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.AddTypePermissionsRecursively``1(DevExpress.Persistent.Base.IPermissionPolicyRole,System.String,System.Nullable{DevExpress.Persistent.Base.SecurityPermissionState})">
            <summary>
                <para>Recursively adds type permissions to the current role for each type which <a href="https://msdn.microsoft.com/en-us/library/system.type.isassignablefrom.aspx">is assignable from</a> the given type (or is equal to it). If the permission for the type exists already, then the settings of this existing type permission are altered.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="state">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.EnsureNavigationPermission(DevExpress.Persistent.Base.IPermissionPolicyRole,System.String)">
            <summary>
                <para>Searches for the first permission for the specified navigation item in the current role. If the navigation permission is not found, it is created.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="itemPath">
		A <b>String</b> value which is the path to the particular navigation item or group.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyNavigationPermissionObject object specifying the found or created navigation permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.EnsureTypePermission(DevExpress.Persistent.Base.IPermissionPolicyRole,System.Type)">
            <summary>
                <para>Searches for the first permission for the specified type in the current role. If the type permission is not found, it is created.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="targetType">
		A <see cref="T:System.Type"/> object specifying the target type.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject object specifying the found or created type permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.EnsureTypePermission``1(DevExpress.Persistent.Base.IPermissionPolicyRole)">
            <summary>
                <para>Searches for the first permission for the specified type in the current role. If the type permission is not found, it is created.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject object specifying the found or created type permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.FindFirstTypePermission(DevExpress.Persistent.Base.IPermissionPolicyRole,System.Type)">
            <summary>
                <para>Searches for the first permission for the specified type in the current role.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="targetType">
		A <see cref="T:System.Type"/> object specifying the target type.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject object specifying the found type permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.FindFirstTypePermission``1(DevExpress.Persistent.Base.IPermissionPolicyRole)">
            <summary>
                <para>Searches for the first permission for the specified type in the current role.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject object specifying the found type permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.SetTypePermission(DevExpress.Persistent.Base.IPermissionPolicyRole,System.Type,System.String,System.Nullable`1)">
            <summary>
                <para>Searches for the first permission for the specified type in the current role, and rewrites its settings according to the specified parameters. If the type permission is not found, it is created.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="targetType">
		A <see cref="T:System.Type"/> object specifying the target type.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="state">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject object specifying the found or created type permission.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.PermissionSettingHelper.SetTypePermission``1(DevExpress.Persistent.Base.IPermissionPolicyRole,System.String,System.Nullable{DevExpress.Persistent.Base.SecurityPermissionState})">
            <summary>
                <para>Searches for the first permission for the specified type in the current role, and rewrites its settings according to the specified parameters. If the type permission is not found, it is created.</para>
            </summary>
            <param name="role">
		An <see cref="T:DevExpress.Persistent.Base.IPermissionPolicyRole"/> object specifying the security role.
            </param>
            <param name="operations">
		A string containing the semicolon-separated list of security operations. Operation names and their delimiter are defined by string constants declared in the <see cref="T:DevExpress.ExpressApp.Security.SecurityOperations"/> static class.
            </param>
            <param name="state">
		A <see cref="T:DevExpress.Persistent.Base.SecurityPermissionState"/> enumeration value specifying if access is granted or denied.
            </param>
            <returns>A DevExpress.Persistent.Base.IPermissionPolicyTypePermissionObject object specifying the found or created type permission.</returns>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.AuthenticationBase">

            <summary>
                <para>An abstract base class for Security System authentication types.</para>
            </summary>

        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationBase.AskLogonParametersViaUI">
            <summary>
                <para>Indicates whether or not the logon process is interactive (logon parameters are requested via the logon dialog).</para>
            </summary>
            <value><b>true</b>, when the logon process is interactive, otherwise - false.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationBase.Authenticate(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
                <para>Authenticates a user trying to find the corresponding user object by comparing logon parameter values with the information stored in the database.</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> Object Space used for data manipulation.
            </param>
            <returns>An object which is an authenticated user.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationBase.ClearSecuredLogonParameters">
            <summary>
                <para>Resets values exposed by the Logon Parameters object that should not be accessible after logon (e.g., password).</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Security.AuthenticationBase.CreateCustomLogonParameters">
            <summary>
                <para>Occurs when the <see cref="P:DevExpress.ExpressApp.Security.AuthenticationBase.LogonParameters"/> property getter is called.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationBase.GetBusinessClasses">
            <summary>
                <para>Returns a list of business classes to be added to the Application Model.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationBase.IsLogoffEnabled">
            <summary>
                <para>Indicates whether to enable the <see cref="P:DevExpress.ExpressApp.SystemModule.LogoffController.LogoffAction"/> Action.</para>
            </summary>
            <value><b>true</b>, if the Logoff Action is enabled; otherwise - <b>false</b>.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationBase.IsSecurityMember(System.Object,System.String)">
            <summary>
                <para>Checks if the specified member is used by the security system.</para>
            </summary>
            <param name="theObject">
		A type that owns a member to be checked.
            </param>
            <param name="memberName">
		A string which is the name of a member to be checked.
            </param>
            <returns><b>true</b>, if the specified member is a member used by the security system, otherwise - <b>false</b>.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationBase.IsSecurityMember(System.Type,System.String)">
            <summary>
                <para>Checks if the specified member is used by the security system.</para>
            </summary>
            <param name="type">
		A type that owns a member to be checked.
            </param>
            <param name="memberName">
		A string which is the name of a member to be checked.
            </param>
            <returns><b>true</b>, if the specified member is a member used by the security system, otherwise - <b>false</b>.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationBase.Logoff">
            <summary>
                <para>Permorms the logoff.</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationBase.LogonParameters">
            <summary>
                <para>Returns the Logon Parameters object.</para>
            </summary>
            <value>A Logon Parameters object.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationBase.Name">
            <summary>
                <para>Gets the name of the current authentication type.</para>
            </summary>
            <value>A string which is the name of the current authentication type.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationBase.SetLogonParameters(System.Object)">
            <summary>
                <para>Initializes the Logon Parameters.</para>
            </summary>
            <param name="logonParameters">
		The Logon Parameters object.
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationBase.UserType">
            <summary>
                <para>Specifies the type of user that is supported by the authentication.</para>
            </summary>
            <value>A <b>Sustem.Type</b> object which is the type of user supported by the authentication.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.OperationPermissionBase">

            <summary>
                <para>An abstact base class for Operation Permissions.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.OperationPermissionBase.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.OperationPermissionBase"/> class.</para>
            </summary>
            <param name="operation">
		A string which specifies the secured operation.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.OperationPermissionBase.GetSupportedOperations">
            <summary>
                <para>Returns the list of operations that are supported by the current Operation Permission.</para>
            </summary>
            <returns>An <b>IList&lt;String&gt;</b> collection of operations that are supported by the current Operation Permission.</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.OperationPermissionBase.Operation">
            <summary>
                <para>Gets the name of a secured operation.</para>
            </summary>
            <value>A string which is the name of a secured operation.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.TypeOperationPermission">

            <summary>
                <para>An Operation Permission for all objects of a specified type.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.TypeOperationPermission.#ctor(System.Type,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.TypeOperationPermission"/> class.</para>
            </summary>
            <param name="objectType">
		A <b>System.Type</b> object which is the secured type.
            </param>
            <param name="operation">
		A string which is the name of the secured operation. Supported operations are &quot;Read&quot;, &quot;Write&quot;, &quot;Create&quot;, &quot;Delete&quot; and &quot;Navigate&quot;.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.TypeOperationPermission.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para> </para>
            </summary>
            <param name="information">
		 
            </param>
            <param name="context">
		 
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.TypeOperationPermission.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para> </para>
            </summary>
            <param name="info">
		 
            </param>
            <param name="context">
		 
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.TypeOperationPermission.GetSupportedOperations">
            <summary>
                <para>Returns the list of operations that are supported by the current Operation Permission.</para>
            </summary>
            <returns>An <b>IList&lt;Sting&gt;</b> collection of operations that are supported by the current Operation Permission.</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.TypeOperationPermission.ObjectType">
            <summary>
                <para>The type of the secured object.</para>
            </summary>
            <value>A <b>System.Type</b> object which is the secured type.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.MemberOperationPermission">

            <summary>
                <para>An operation Permission for a specific object member.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.MemberOperationPermission.#ctor(System.Type,System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.MemberOperationPermission"/> class.</para>
            </summary>
            <param name="objectType">
		A <b>System.Type</b> object which is the type exposing the secured member.
            </param>
            <param name="memberName">
		A string which is the name of the secured member.
            </param>
            <param name="operation">
		A string which is the name of the secured operation. Supported operations are &quot;Read&quot; and &quot;Write&quot;.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.MemberOperationPermission.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para> </para>
            </summary>
            <param name="information">
		 
            </param>
            <param name="context">
		 
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.MemberOperationPermission.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para> </para>
            </summary>
            <param name="info">
		 
            </param>
            <param name="context">
		 
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.MemberOperationPermission.GetSupportedOperations">
            <summary>
                <para>Returns the list of operations that are supported by the current Operation Permission.</para>
            </summary>
            <returns>An <b>IList&lt;Sting&gt;</b> collection of operations that are supported by the current Operation Permission.</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.MemberOperationPermission.MemberName">
            <summary>
                <para>Gets a string which is the name of the secured member.</para>
            </summary>
            <value>A string which is the name of the secured member.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.MemberOperationPermission.ObjectType">
            <summary>
                <para>Gets the type exposing the secured member.</para>
            </summary>
            <value>A <b>System.Type</b> object which is the type exposing the secured member.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.ModelOperationPermission">

            <summary>
                <para>The Operation Permission for using the Model Editor at run time.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.ModelOperationPermission.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.ModelOperationPermission"/> class.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ModelOperationPermission.GetSupportedOperations">
            <summary>
                <para>Returns the list of operations that are supported by the current Operation Permission.</para>
            </summary>
            <returns>An <b>IList&lt;Sting&gt;</b> collection of operations that are supported by the current Operation Permission.</returns>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.ObjectOperationPermission">

            <summary>
                <para>An Operation Permission for objects that satisfy a specified criteria.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.ObjectOperationPermission.#ctor(System.Type,System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.ObjectOperationPermission"/> class.</para>
            </summary>
            <param name="objectType">
		A <b>System.Type</b> object which is the type of the secured object.
            </param>
            <param name="criteria">
		A string which specifies a criteria satisfied by a the secured object.
            </param>
            <param name="operation">
		A string which is the name of the secured operation. Supported operations are &quot;Read&quot;, &quot;Write&quot;, &quot;Delete&quot; and &quot;Navigate&quot;.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ObjectOperationPermission.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para> </para>
            </summary>
            <param name="information">
		 
            </param>
            <param name="context">
		 
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.ObjectOperationPermission.Criteria">
            <summary>
                <para>Gets a criteria satisfied by a secured object.</para>
            </summary>
            <value>A string which specifies a criteria satisfied by a secured object.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ObjectOperationPermission.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para> </para>
            </summary>
            <param name="info">
		 
            </param>
            <param name="context">
		 
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.ObjectOperationPermission.GetSupportedOperations">
            <summary>
                <para>Returns the list of operations that are supported by the current Operation Permission.</para>
            </summary>
            <returns>An <b>IList&lt;Sting&gt;</b> collection of operations that are supported by the current Operation Permission.</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.ObjectOperationPermission.ObjectType">
            <summary>
                <para>Gets the type of the secured object.</para>
            </summary>
            <value>A <b>System.Type</b> object which is the type of the secured object.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.CustomCreateUserEventArgs">

            <summary>
                <para>Arguments, passed to the <see cref="E:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.CustomCreateUser"/> event.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.CustomCreateUserEventArgs.#ctor(DevExpress.ExpressApp.IObjectSpace,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.CustomCreateUserEventArgs"/> class.</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> Object Space used to create a user persistent object.
            </param>
            <param name="userName">
		A string which is the auto-created user login name.
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.CustomCreateUserEventArgs.ObjectSpace">
            <summary>
                <para>Gets an Object Space used to create a user persistent object.</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> Object Space used to create a user persistent object.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.CustomCreateUserEventArgs.User">
            <summary>
                <para>Specifies an auto-created user.</para>
            </summary>
            <value>An auto-created user object.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.CustomCreateUserEventArgs.UserName">
            <summary>
                <para>Gets the login name of the auto-created user.</para>
            </summary>
            <value>A string which is the login name of the auto-created user.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.SecurityStrategy">

            <summary>
                <para>An abstract base class for Security Strategies.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.#ctor(System.Type,DevExpress.ExpressApp.Security.AuthenticationBase)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.SecurityStrategy"/> class with the specified user type and authentication.</para>
            </summary>
            <param name="userType">
		The type of a security strategy user.
            </param>
            <param name="authentication">
		An <see cref="T:DevExpress.ExpressApp.Security.AuthenticationBase"/> object which is the authentication used within the security strategy.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.SecurityStrategy"/> class.</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.SecurityStrategy.AdditionalSecuredTypes">
            <summary>
                <para>Specifies the list extra types that can be secured (by default, only persistent types can be secured).</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.SecurityStrategy.AdministratorRoleName">
            <summary>
                <para>Specifies the name of the administrator role.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.AllowAnonymousAccess">
            <summary>
                <para>Specifies if users can access all secured data anonymously before they log in.</para>
            </summary>
            <value><b>true</b>, if users can access secured data anonymously; otherwise, <b>false</b>. </value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.AnonymousAllowedTypes">
            <summary>
                <para>Specifies types that users can access anonymously before they log in.</para>
            </summary>
            <value>A list of types that users can access anonymously.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.AssociationPermissionsMode">
            <summary>
                <para>Specifies the mode of processing security permissions for associations.</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.Security.AssociationPermissionsMode"/> value.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.CreateSelectDataSecurity">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.CreateSelectDataSecurity(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
                <para> </para>
            </summary>
            <param name="objectSpace">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.ExpressApp.Security.SecurityStrategy.CustomizeRequestProcessors">
            <summary>
                <para>Occurs after Permission Request Processors are registered.</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.DelayPermissionDictionaryLoading">
            <summary>
                <para>For internal use.</para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.GetBusinessClasses">
            <summary>
                <para>Returns a list of persistent types that are used within the current security strategy.</para>
            </summary>
            <returns>An <b>IList&lt;Type&gt;</b> object that is the list of persistent types that are used within the current security strategy.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.GetSecuredTypes">
            <summary>
                <para>Returns a list of business classes that can be secured.</para>
            </summary>
            <returns>An <b>IEnumerable&lt;Type&gt;</b> list of secured types.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.IsGranted(DevExpress.ExpressApp.Security.IPermissionRequest)">
            <summary>
                <para>Checks whether the specified operation is allowed.</para>
            </summary>
            <param name="permissionRequest">
		An <b>IPermissionRequest</b> object that specifies the secured operation.
            </param>
            <returns><b>true</b>, when the operation is allowed; otherwise - <b>false</b>.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.IsGranted(System.Collections.Generic.IList`1)">
            <summary>
                <para>Checks whether the specified operations are allowed.</para>
            </summary>
            <param name="permissionRequests">
		An <b>IList&lt;IPermissionRequest&gt;</b> object that specifies the secured operations.
            </param>
            <returns><b>true</b>, when the operations are allowed; otherwise - <b>false</b>.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.IsSecuredType(System.Type)">
            <summary>
                <para>Checks if the specified type can be secured.</para>
            </summary>
            <param name="type">
		A <b>System.Type</b> object.
            </param>
            <returns><b>true</b>, if the specified type can be secured; otherwise - <b>false</b>;</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.Logoff">
            <summary>
                <para>Logs the current user off.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategy.Logon(System.Object)">
            <summary>
                <para>Intended for internal use and should not be called from your code. Use another overload of this method that takes an <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> parameter instead.</para>
            </summary>
            <param name="user">
		 
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.RolesMergingMode">
            <summary>
                <para>Specifies how the Security System determines if a user can perform a specific operation when this user has multiple roles with different permission sets.</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Security.RolesMergingMode"/> enumeration value specifying the roles merging mode when a user has multiple roles.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.SecuredNonPersistentTypes">
            <summary>
                <para>This property is now obsolete. Use the <see cref="F:DevExpress.ExpressApp.Security.SecurityStrategy.AdditionalSecuredTypes"/> property instead.</para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.SupportNavigationPermissionsForTypes">
            <summary>
                <para>Specifies whether or not the navigation permissions are supported for types.</para>
            </summary>
            <value><b>true</b>, if the navigation permissions are supported for types, otherwise <b>false</b>.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.TraceLevel">
            <summary>
                <para>Specifies the trace level for logs.</para>
            </summary>
            <value>A <a href="http://msdn.microsoft.com/en-us/library/system.diagnostics.tracelevel.aspx">TraceLevel</a> enumeration value that  specifies the trace level for logs.</value>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.SecurityStrategy.TraceSwitchName">
            <summary>
                <para>Gets the name of a <a href="http://msdn.microsoft.com/en-us/library/system.diagnostics.traceswitch.aspx">TraceSwitch</a> used by <see cref="T:DevExpress.ExpressApp.Security.SecurityStrategy"/>.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.UseOptimizedPermissionRequestProcessor">
            <summary>
                <para>For internal use.</para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.UsePermissionRequestProcessor">
            <summary>
                <para>For internal use.</para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.UserId">
            <summary>
                <para>An identifier of the current user.</para>
            </summary>
            <value>An object that is the current user&#39;s unique identifier.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.UserName">
            <summary>
                <para>Gets the current user name.</para>
            </summary>
            <value>A string that is the current user name.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategy.UserType">
            <summary>
                <para>Specifies the type of user that is supported by the security strategy.</para>
            </summary>
            <value>The type of user that is supported by the security strategy.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.SecurityStrategyComplex">

            <summary>
                <para>A Security Strategy that maintains users who have a list of associated roles.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategyComplex.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.SecurityStrategyComplex"/> class.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategyComplex.#ctor(System.Type,System.Type,DevExpress.ExpressApp.Security.AuthenticationBase)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.SecurityStrategyComplex"/> class with the specified user type, role type, and authentication.</para>
            </summary>
            <param name="userType">
		The type of a security strategy user.
            </param>
            <param name="roleType">
		The type of a security strategy role.
            </param>
            <param name="authentication">
		An <see cref="T:DevExpress.ExpressApp.Security.AuthenticationBase"/> object which is the authentication used within the security strategy.
            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Security.SecurityStrategyComplex.CustomInitializeNewUser">
            <summary>
                <para>Occurs when a user is automatically created.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityStrategyComplex.GetBusinessClasses">
            <summary>
                <para>Returns a list of persistent types that are used within the current security strategy.</para>
            </summary>
            <returns>An <b>IList&lt;Type&gt;</b> object that is the list of persistent types that are used within the current security strategy.</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategyComplex.NewUserRoleName">
            <summary>
                <para>Specifies the name of role which is assigned to auto-created users.</para>
            </summary>
            <value>A string which is the name of the role assigned to auto-created users.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityStrategyComplex.RoleType">
            <summary>
                <para>Specifies the type of a security strategy role.</para>
            </summary>
            <value>The type of a security strategy role.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.AuthenticationStandard`2">

            <summary>
                <para>An Authentication that assumes an interactive logon. A user inputs logon parameters (e.g. user name and password) manually via the logon dialog.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard`2.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandard`2"/> class.</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.AuthenticationStandard`1">

            <summary>
                <para>An Authentication that assumes an interactive logon. A user inputs logon parameters (e.g. user name and password) manually via the logon dialog.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard`1.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandard`1"/> class.</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.AuthenticationStandard">

            <summary>
                <para>An Authentication that assumes an interactive logon. A user inputs logon parameters (e.g. user name and password) manually via the logon dialog.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard.#ctor(System.Type,System.Type)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandard"/> class with the specified user type and logon parameters type.</para>
            </summary>
            <param name="userType">
		The user type used within the authentication.
            </param>
            <param name="logonParametersType">
		The logon parameters type used within the authentication.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandard"/> class.</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationStandard.AskLogonParametersViaUI">
            <summary>
                <para>A boolean value indicating whether the logon process is interactive (a user inputs logon parameters manually).</para>
            </summary>
            <value><b>true</b>, if the logon process is interactive; otherwise - <b>false</b>.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard.Authenticate(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
                <para>Returns an authenticated user.</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> object which is an object space used to find a user by logon parameters.
            </param>
            <returns>An object which is the authenticated user.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard.ClearSecuredLogonParameters">
            <summary>
                <para>Clears the logon parameters&#39; password.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard.GetBusinessClasses">
            <summary>
                <para>Returns a list of persistent types that are used within the current authentication.</para>
            </summary>
            <returns>An <b>IList&lt;Type&gt;</b> object that is the list of persistent types that are used within the current authentication.</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationStandard.IsLogoffEnabled">
            <summary>
                <para>Gets a boolean value indicating that a user can log off and then logon again without restarting the application.</para>
            </summary>
            <value>A boolean value indicating that a user can log off the application.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard.IsSecurityMember(System.Type,System.String)">
            <summary>
                <para>Checks if the specified member is a member of the <b>IAuthenticationStandardUser</b> interface.</para>
            </summary>
            <param name="type">
		A type that owns a member to be checked.
            </param>
            <param name="memberName">
		A string which is the name of a member to be checked.
            </param>
            <returns><b>true</b>, if the specified member is a member of the <b>IAuthenticationActiveDirectoryUser</b> interface, otherwise - <b>false</b>.</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationStandard.IsSupportChangePassword">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard.Logoff">
            <summary>
                <para>Re-creates the Logon Parameters object.</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationStandard.LogonParameters">
            <summary>
                <para>Gets the logon parameters object.</para>
            </summary>
            <value>An object specifying the logon parameters. By default, an <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters"/> object is returned.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationStandard.LogonParametersType">
            <summary>
                <para>Specifies the type of logon parameters.</para>
            </summary>
            <value>The type of logon parameters.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandard.SetLogonParameters(System.Object)">
            <summary>
                <para>Initializes the Logon Parameters.</para>
            </summary>
            <param name="logonParameters">
		The Logon Parameters object.
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationStandard.UserType">
            <summary>
                <para>Specifies the type of user that is supported by the authentication.</para>
            </summary>
            <value>The type of user that is supported by the authentication.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory`2">

            <summary>
                <para>An Authentication that assumes an automatic logon. The user name is taken from the currently used Windows account.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory`2.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory`2"/> class.</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory`1">

            <summary>
                <para>An Authentication that assumes an automatic logon. The user name is taken from the currently used Windows account.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory`1.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory`1"/> class.</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory">

            <summary>
                <para>An Authentication that assumes an automatic logon.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.#ctor(System.Type,System.Type)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory"/> class with the specified user type and logon parameters type.</para>
            </summary>
            <param name="userType">
		The user type used within the authentication.
            </param>
            <param name="logonParametersType">
		The logon parameters type used within the authentication.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory"/> class.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.#ctor(System.Type,DevExpress.ExpressApp.Security.ICanInitializeNewUser)">
            <summary>
                <para> </para>
            </summary>
            <param name="userType">
		 
            </param>
            <param name="canInitializeNewUser">
		 
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.AskLogonParametersViaUI">
            <summary>
                <para>A boolean value indicating whether the logon process is interactive (a user inputs logon parameters manually).</para>
            </summary>
            <value><b>true</b>, if the logon process is interactive; otherwise - <b>false</b>.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.Authenticate(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
                <para>Returns an authenticated user.</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> object which is an object space used to find a user by logon parameters.
            </param>
            <returns>An object which is the authenticated user.</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.CreateUserAutomatically">
            <summary>
                <para>Specifies whether a user is created automatically for the Windows account used to run the application.</para>
            </summary>
            <value><b>true</b>, if a user is created automatically for the Windows account used to run the application; otherwise - <b>false</b>.</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.CustomCreateUser">
            <summary>
                <para>Occurs when a user is auto-created.</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.IsLogoffEnabled">
            <summary>
                <para>Gets a boolean value indicating that a user can log off and then logon again without restarting the application.</para>
            </summary>
            <value>A boolean value indicating that a user can log off the application.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.IsSecurityMember(System.Type,System.String)">
            <summary>
                <para>Checks is the specified member is a member of the <b>IAuthenticationActiveDirectoryUser</b> interface.</para>
            </summary>
            <param name="type">
		A type that owns a member to be checked.
            </param>
            <param name="memberName">
		A string which is the name of a member to be checked.
            </param>
            <returns><b>true</b>, if the specified member is a member of the <b>IAuthenticationActiveDirectoryUser</b> interface, otherwise - <b>false</b>.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.Logoff">
            <summary>
                <para>Logs the current user off.</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.LogonParameters">
            <summary>
                <para>Gets the logon parameters object.</para>
            </summary>
            <value>An object that is the logon parameters.</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.LogonParametersType">
            <summary>
                <para>Specifies the type of logon parameters.</para>
            </summary>
            <value>The type of logon parameters.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.SetLogonParameters(System.Object)">
            <summary>
                <para>Initializes the Logon Parameters.</para>
            </summary>
            <param name="logonParameters">
		The Logon Parameters object.
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationActiveDirectory.UserType">
            <summary>
                <para>Specifies the type of user that is supported by the authentication.</para>
            </summary>
            <value>The type of user that is supported by the authentication.</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.SecurityModule">

            <summary>
                <para>The module contained in the <i>DevExpress.ExpressApp.Security.v18.2.dll</i> assembly.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.Security.SecurityModule"/> class.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.AddGeneratorUpdaters(DevExpress.ExpressApp.Model.Core.ModelNodesGeneratorUpdaters)">
            <summary>
                <para>Adds Generator Updaters that perform the Application Model customizations required by the Security System.</para>
            </summary>
            <param name="updaters">
		A <b>ModelNodesGeneratorUpdaters</b> collection.
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityModule.CanHandleObjectFormatterCustomGetValueEvent">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityModule.ChangePasswordOnLogonAction">
            <summary>
                <para>An Action that shows the <b>Change password on first logon</b> dialog.</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.PopupWindowShowAction"/> Action that shows the <b>Change password on first logon</b> dialog.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.CommitCurrentUserLogonParameters(DevExpress.ExpressApp.IObjectSpace,System.String,System.Object)">
            <summary>
                <para> </para>
            </summary>
            <param name="objectSpace">
		 
            </param>
            <param name="password">
		 
            </param>
            <param name="sourceObject">
		 
            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Security.SecurityModule.CustomChangePasswordOnLogon">
            <summary>
                <para>Occurs when the <b>ChangePasswordOnLogon</b> Action is being executed.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.CustomizeTypesInfo(DevExpress.ExpressApp.DC.ITypesInfo)">
            <summary>
                <para>Registers the User and Role types within the <see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> object that supplies metadata on types used in an XAF application.</para>
            </summary>
            <param name="typesInfo">
		An <see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> object that supplies metadata on types used in an XAF application.
            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Security.SecurityModule.CustomUpdateLogonParameters">
            <summary>
                <para>Occurs when the <see cref="M:DevExpress.ExpressApp.Security.SecurityModule.TryUpdateLogonParameters(System.String,System.Object)"/> method is executed.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.ExtendModelInterfaces(DevExpress.ExpressApp.Model.ModelInterfaceExtenders)">
            <summary>
                <para> </para>
            </summary>
            <param name="extenders">
		 
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.GetModuleUpdaters(DevExpress.ExpressApp.IObjectSpace,System.Version)">
            <summary>
                <para>Returns the list of <see cref="T:DevExpress.ExpressApp.Updating.ModuleUpdater"/> updaters that handle database updates for the <see cref="T:DevExpress.ExpressApp.Security.SecurityModule"/> module.</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> object which represents the Object Space used to update the database.
            </param>
            <param name="versionFromDB">
		A <b>System.Version</b> object which represents the current database version.
            </param>
            <returns>An IEnumerable&lt;<see cref="T:DevExpress.ExpressApp.Updating.ModuleUpdater"/>&gt; list of updaters that handle database updates for the <see cref="T:DevExpress.ExpressApp.Security.SecurityModule"/> module.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.GetStartupActions">
            <summary>
                <para>Returns a list of Pop-up Window Show Actions that must be executed before loading the application&#39;s main Window.</para>
            </summary>
            <returns>An <b>IList&lt;</b><see cref="T:DevExpress.ExpressApp.Actions.PopupWindowShowAction"/><b>&gt;</b> list  that must be executed before loading the application&#39;s main Window.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.GetUserType(DevExpress.ExpressApp.XafApplication,DevExpress.ExpressApp.ApplicationModulesManager)">
            <summary>
                <para>Returns the type of Security System users.</para>
            </summary>
            <param name="application">
		An <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that manages the current application.
            </param>
            <param name="modulesManager">
		An <b>ApplicationModulesManager</b> object that manages the current application&#39;s modules.
            </param>
            <returns>A <b>System.Type</b> value that is the type of Security System users.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.GetXafResourceLocalizerTypes">
            <summary>
                <para>Returns a collection of additional Resource Localizer types that can be used in an application that uses the <see cref="T:DevExpress.ExpressApp.Security.SecurityModule"/>.</para>
            </summary>
            <returns>An <b>ICollection&lt;Type&gt;</b> collection containing the types of the Resource Localizers supplied with the <b>SecurityModule</b>.</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.Setup(DevExpress.ExpressApp.XafApplication)">
            <summary>
                <para>Configures the XAF application to operate with the Security module.</para>
            </summary>
            <param name="application">
		An <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that manages an XAF application.
            </param>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.SecurityModule.StrictSecurityStrategyBehavior">
            <summary>
                <para>For internal use.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.SecurityModule.TryUpdateLogonParameters(System.String,System.Object)">
            <summary>
                <para> </para>
            </summary>
            <param name="password">
		 
            </param>
            <param name="sourceObject">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.SecurityModule.UsedExportedTypes">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.SecurityModule.UserType">
            <summary>
                <para>For internal use.</para>
            </summary>
            <value> </value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters">

            <summary>
                <para>Logon Parameters type used by default with the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandard"/> authentication.</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters"/> class.</para>
            </summary>
            <param name="userName">
		A string which is the login name.
            </param>
            <param name="password">
		A string which is the password.
            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters"/> class.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.ClearPassword">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>Populates a <a href="https://msdn.microsoft.com/en-us/library/system.runtime.serialization.serializationinfo(v=vs.110).aspx">SerializationInfo</a> with the data needed to serialize the <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters"/> object.</para>
            </summary>
            <param name="info">
		The <b>SerializationInfo</b> to populate with data.
            </param>
            <param name="context">
		The <a href="https://msdn.microsoft.com/en-us/library/system.runtime.serialization.streamingcontext(v=vs.110).aspx">StreamingContext</a> object describing the source and destination of the serialized stream.
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.Password">
            <summary>
                <para>Specifies the password.</para>
            </summary>
            <value>A string which is the password.</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.PropertyChanged">
            <summary>
                <para>Occurs when a <see cref="T:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters"/>&#39;s property value changes.</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.ReadPropertyValues(DevExpress.ExpressApp.Utils.SettingsStorage)">
            <summary>
                <para>Reads the <see cref="P:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.UserName"/> and <see cref="P:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.Password"/> values from the settings storage object.</para>
            </summary>
            <param name="storage">
		A <b>SettingsStorage</b> object storing values to be read.
            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.UserName">
            <summary>
                <para>Specifies the login name.</para>
            </summary>
            <value>A string which is the login name.</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.WritePropertyValues(DevExpress.ExpressApp.Utils.SettingsStorage)">
            <summary>
                <para>Writes the <see cref="P:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.UserName"/> and <see cref="P:DevExpress.ExpressApp.Security.AuthenticationStandardLogonParameters.Password"/> values to the settings storage object.</para>
            </summary>
            <param name="storage">
		A <b>SettingsStorage</b> object storing values.
            </param>


        </member>
    </members>
</doc>
